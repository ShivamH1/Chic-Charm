// Import the necessary dependencies from the 'react' library
import React, { useContext } from "react";

// Import the ProductContext from the '../utils/Context' module
import { ProductContext } from "../utils/Context";

// Import the Link component from the 'react-router-dom' library
import { Link } from "react-router-dom";

// Define the Nav component as a default export
export default function Nav() {
  // Access the products array from the ProductContext and use it to update the state
  const [products] = useContext(ProductContext);

  // Create an array of distinct categories from the products array
  let distinct_category =
    products && products.reduce((acc, cv) => [...acc, cv.category], []);

  // Remove duplicate categories from the distinct_category array
  distinct_category = [...new Set(distinct_category)];

  // Define a function that generates a random rgba color
  const color = () => {
    // Generate three random numbers between 0 and 255
    const r = Math.random() * 255;
    const g = Math.random() * 255;
    const b = Math.random() * 255;

    // Format the numbers as fixed-point numbers with 0 decimal places
    const rFixed = r.toFixed();
    const gFixed = g.toFixed();
    const bFixed = b.toFixed();

    // Return the rgba color string
    return `rgba(${rFixed}, ${gFixed}, ${bFixed}, 0.4)`;
  };

  // Render the Nav component
  return (
    // Create a navigation bar with a width of 15% and a background color of zinc-50
    <nav className="w-[15%] h-full bg-zinc-50 flex flex-col items-center pt-5">
      {/* Create a link to the '/create' route with a blue border and text color */}
      <a
        className="py-2 px-5 border rounded border-blue-200 text-blue-400"
        href="/create"
      >
        Add New Product
      </a>

      {/* Create a horizontal line with a width of 80% of the parent container */}
      <hr className="my-3 w-[80%]"></hr>

      {/* Create a heading with text 'Category Filter' */}
      <h1 className="text-xl mb-3 w-[80%]">Category Filter</h1>

      {/* Create a container with a width of 80% of the parent container */}
      <div className="w-[80%]">
        {/* Map over each distinct category and create a link */}
        {distinct_category.map((c, i) => (
          <Link
            key={i}
            // Create a link with a category query parameter
            to={`/?category=${c}`}
            // Apply a flexbox layout with centered items
            className="flex items-center mb-3"
          >
            {/* Create a span element with a background color generated by the color function */}
            <span style={{ backgroundColor: color() }} className="rounded-full mr-2 w-[15px] h-[15px]"></span>{" "}
            {/* Display the category name */}
            {c}
          </Link>
        ))}
      </div>
    </nav>
  );
}